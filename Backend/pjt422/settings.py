"""
Django settings for pjt422 project.

Generated by 'django-admin startproject' using Django 3.2.12.

For more information on this file, see
https://docs.djangoproject.com/en/3.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.2/ref/settings/
"""

from pathlib import Path
# from os import environ, getenv
import os
import environ

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

# env
env = environ.Env(DEBUG=(bool, True))
environ.Env.read_env(
    env_file=os.path.join(BASE_DIR, '.env')
)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.2/howto/deployment/checklist/

SECRET_KEY = env('BACKEND_SECRET_KEY')

DEBUG = env('DEBUG')

ALLOWED_HOSTS = env('BACKEND_ALLOWED_HOSTS').split(' ')

# Application definition

INSTALLED_APPS = [
    # customized apps
    'accounts',
    'campus',
    'stats',

    # 여러 앱 사용 가능해짐 / 대표적으로 shell_plus -> shell에 접근 가능
    'django_extensions',
    # 데이터 직렬화를 위한 도구
    'rest_framework',
    # 다른 서버의 자원을 요청하는 메커니즘 => Vue와 통신을 위한 방법
    'corsheaders',

    # token base authentication
    'rest_framework.authtoken',

    # DRF auth(login) 담당
    'dj_rest_auth',
    'dj_rest_auth.registration',

    # django allauth
    'allauth',
    'allauth.account',
    'allauth.socialaccount',

    # allauth 사용을 위해 필요
    'django.contrib.sites',

    # Mariadb관련 앱
    # 'board.apps.BoardConfig',

    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'drf_yasg',
]

# HTTP 요청 & 응답처리 중간에서 작용하는 시스템
# 데이터 관리 / 앱 서비스 / 메시징 / 인증 및 api 관리
MIDDLEWARE = [
    'corsheaders.middleware.CorsMiddleware',

    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'pjt422.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'pjt422.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.2/ref/settings/#databases

DATABASES = {
    # SQLITE
    # 'default': {
    #     'ENGINE': 'django.db.backends.sqlite3',
    #     'NAME': BASE_DIR / 'db.sqlite3',
    # }

    # MariaDB 사용
    'default': {
        'ENGINE': 'django.db.backends.mysql', # mysqlclient librarly 설치 => pip install mysqlclient
        'NAME': env('MYSQL_DATABASE'), # db 이름
        'USER': env('MYSQL_USER'),
        'PASSWORD': env('MYSQL_ROOT_PASSWORD'), # mariaDB 설치 시 입력한 root 비밀번호 입력
        'HOST': env('MYSQL_HOST'),
        'PORT': env('MYSQL_PORT'),  # default 3306 / Mariadb 설치 시 해당 포트 변경했다면 변경해줘야함
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.2/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.2/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Seoul'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.2/howto/static-files/

STATIC_URL = '/static/'

# Default primary key field type
# https://docs.djangoproject.com/en/3.2/ref/settings/#default-auto-field

# django.contrib.sites에서 등록 필요
SITE_ID = 1

# drf 설정
REST_FRAMEWORK = {
    # 기본 인증을 기본 TOKEN으로 설정
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
    ],

    # 기본 권한 설정
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.AllowAny',  # 기본적으로 모두에게 허용
        # 'rest_framework.permissions.IsAuthenticated', # 로그인 한 사람에게만 허용
    ],
}

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

AUTH_USER_MODEL = 'accounts.User'

CORS_ORIGIN_ALLOW_ALL = True
